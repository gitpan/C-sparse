package C::sparse::sym::SYM_UNINITIALIZED;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::SYM_PREPROCESSOR;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::SYM_BASETYPE;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_NODE;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_PTR;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_FN;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_ARRAY;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_STRUCT;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_UNION;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_ENUM;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_TYPEDEF;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_TYPEOF;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_MEMBER;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_BITFIELD;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_LABEL;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_RESTRICT;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_FOULED;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_KEYWORD;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
package C::sparse::sym::SYM_BAD;
our @ISA = qw (C::sparse::sym C::sparse::sym::NS_SYMBOL);
1;

