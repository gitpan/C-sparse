package C::sparse::stmt::STMT_NONE;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_DECLARATION;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_EXPRESSION;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_COMPOUND;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_IF;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_RETURN;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_CASE;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_SWITCH;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_ITERATOR;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_LABEL;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_GOTO;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_ASM;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_CONTEXT;
our @ISA = qw (C::sparse::stmt);
package C::sparse::stmt::STMT_RANGE;
our @ISA = qw (C::sparse::stmt);

1;
