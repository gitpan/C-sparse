package C::sparse::sym::EXPR_NONE;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_VALUE;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_STRING;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_SYMBOL;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_TYPE;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_BINOP;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_ASSIGNMENT;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_LOGICAL;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_DEREF;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_PREOP;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_POSTOP;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_CAST;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_FORCE_CAST;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_IMPLIED_CAST;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_SIZEOF;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_ALIGNOF;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_PTRSIZEOF;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_CONDITIONAL;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_SELECT;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_STATEMENT;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_CALL;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_COMMA;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_COMPARE;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_LABEL;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_INITIALIZER;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_IDENTIFIER;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_INDEX;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_POS;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_FVALUE;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_SLICE;
our @ISA = qw (C::sparse::sym);
package C::sparse::sym::EXPR_OFFSETOF;
our @ISA = qw (C::sparse::sym);
1;

